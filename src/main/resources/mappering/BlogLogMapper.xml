<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="run.app.mapper.BlogLogMapper">
  <resultMap id="BaseResultMap" type="run.app.entity.model.BlogLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="romoteIp" jdbcType="VARCHAR" property="romoteip" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="romoteTime" jdbcType="TIMESTAMP" property="romotetime" />
    <result column="operation" jdbcType="VARCHAR" property="operation" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, romoteIp, username, romoteTime, operation
  </sql>
  <select id="selectByExample" parameterType="run.app.entity.model.BlogLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from blog_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="run.app.entity.model.BlogLogExample">
    delete from blog_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="run.app.entity.model.BlogLog">
    insert into blog_log (id, romoteIp, username, 
      romoteTime, operation)
    values (#{id,jdbcType=BIGINT}, #{romoteip,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{romotetime,jdbcType=TIMESTAMP}, #{operation,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="run.app.entity.model.BlogLog">
    insert into blog_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="romoteip != null">
        romoteIp,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="romotetime != null">
        romoteTime,
      </if>
      <if test="operation != null">
        operation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="romoteip != null">
        #{romoteip,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="romotetime != null">
        #{romotetime,jdbcType=TIMESTAMP},
      </if>
      <if test="operation != null">
        #{operation,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="run.app.entity.model.BlogLogExample" resultType="java.lang.Long">
    select count(*) from blog_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.romoteip != null">
        romoteIp = #{record.romoteip,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.romotetime != null">
        romoteTime = #{record.romotetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operation != null">
        operation = #{record.operation,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog_log
    set id = #{record.id,jdbcType=BIGINT},
      romoteIp = #{record.romoteip,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      romoteTime = #{record.romotetime,jdbcType=TIMESTAMP},
      operation = #{record.operation,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="run.app.entity.model.BlogLog">
    update blog_log
    <set>
      <if test="romoteip != null">
        romoteIp = #{romoteip,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="romotetime != null">
        romoteTime = #{romotetime,jdbcType=TIMESTAMP},
      </if>
      <if test="operation != null">
        operation = #{operation,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="run.app.entity.model.BlogLog">
    update blog_log
    set romoteIp = #{romoteip,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      romoteTime = #{romotetime,jdbcType=TIMESTAMP},
      operation = #{operation,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>